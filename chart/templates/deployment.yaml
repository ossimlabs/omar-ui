{{- $annotations := merge .Values.deployment.annotations $.Values.global.deployment.annotations -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "omar-ui.labels" . | nindent 4 }}
  name: {{ include "omar-ui.fullname" . }}
  annotations:
  {{- range $key, $value := $annotations }}
    {{- $key | nindent 4 }}: {{ tpl $value $ | quote }}
  {{- end }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "omar-ui.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "omar-ui.selectorLabels" . | nindent 8 }}
    spec:
      initContainers:
      {{- if (pluck "useSpringConfigServer" .Values .Values.global | first) }}
      - name: wait-for-config-server
        image: "{{ include "omar-ui.busybox.image" . }}"
        command: ['sh', '-c', "until wget omar-config-server:8888/omar-config-server/omar-ui.yml; do echo waiting for config server; sleep 2; done"]
      {{- end }}
      {{- if .Values.extraInitContainers }}
      {{- toYaml .Values.extraInitContainers | nindent 6 }}
      {{- end }}
      containers:
      {{- if .Values.sideCars }}
      {{- toYaml .Values.sideCars | nindent 6 }}
      {{- end }}
      - name: {{ .Chart.Name }}
        env:
        {{- include "omar-ui.envVars" . | nindent 8 }}
        envFrom:
          {{- with (concat .Values.envFrom .Values.global.envFrom) }}
          {{- tpl (toYaml .) $ | nindent 10 }}
          {{- end }}
        image: {{ include "omar-ui.image" . | quote }}
        imagePullPolicy: {{ include "omar-ui.pullPolicy" . }}
        livenessProbe:
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          tcpSocket:
            port: {{ .Values.internalPort }}
        readinessProbe:
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          httpGet:
            path: {{ .Values.readinessProbe.path }}
            port: {{ .Values.internalPort }}
            scheme: HTTP
        ports:
        - containerPort: {{ .Values.internalPort }}
          protocol: TCP
        resources:
          limits:
            cpu: {{ .Values.resources.limits.cpu }}
            memory: {{ .Values.resources.limits.memory }}
          requests:
            cpu: {{ .Values.resources.requests.cpu }}
            memory: {{ .Values.resources.requests.memory }}
        terminationMessagePath: /dev/termination-log
        volumeMounts:
          {{- include "omar-ui.volumeMounts" . | nindent 12 }}
      dnsPolicy: ClusterFirst
      {{- include "omar-ui.imagePullSecrets" . | indent 6 }}
      restartPolicy: Always
      securityContext: {}
      serviceAccountName: {{ include "omar-ui.serviceAccount.name" . }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- with merge .Values.nodeSelector .Values.global.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with merge .Values.affinity .Values.global.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with concat .Values.tolerations .Values.global.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        {{- include "omar-ui.volumes" . | nindent 8 }}

