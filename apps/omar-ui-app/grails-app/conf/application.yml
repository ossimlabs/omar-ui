---
grails:
    profile: web
    codegen:
        defaultPackage: omar.ui.app
    gorm:
        reactor:
            # Whether to translate GORM events into Reactor events
            # Disabled by default for performance reasons
            events: false
info:
    app:
        name: '@info.app.name@'
        version: '@info.app.version@'
        grailsVersion: '@info.app.grailsVersion@'
spring:
    jmx:
        unique-names: true
    main:
        banner-mode: "off"
    groovy:
        template:
            check-template-location: false
    devtools:
        restart:
            additional-exclude:
                - '*.gsp'
                - '**/*.gsp'
                - '*.gson'
                - '**/*.gson'
                - 'logback.xml'
                - '*.properties'
management:
    endpoints:
        enabled-by-default: false

---
grails:
    mime:
        disable:
            accept:
                header:
                    userAgents:
                        - Gecko
                        - WebKit
                        - Presto
                        - Trident
        types:
            all: '*/*'
            atom: application/atom+xml
            css: text/css
            csv: text/csv
            form: application/x-www-form-urlencoded
            html:
              - text/html
              - application/xhtml+xml
            js: text/javascript
            json:
              - application/json
              - text/json
            multipartForm: multipart/form-data
            pdf: application/pdf
            rss: application/rss+xml
            text: text/plain
            hal:
              - application/hal+json
              - application/hal+xml
            xml:
              - text/xml
              - application/xml
    urlmapping:
        cache:
            maxsize: 1000
    controllers:
        defaultScope: singleton
    converters:
        encoding: UTF-8
    views:
        default:
            codec: html
        gsp:
            encoding: UTF-8
            htmlcodec: xml
            codecs:
                expression: html
                scriptlet: html
                taglib: none
                staticparts: none
management:
    endpoints:
        jmx:
            unique-names: true

---
hibernate:
    cache:
        queries: false
        use_second_level_cache: false
        use_query_cache: false
    dialect: org.hibernate.spatial.dialect.postgis.PostgisDialect
    
dataSource:
    pooled: true
    jmxExport: true
    driverClassName: org.postgresql.Driver
    username: postgres
    password: ${omarDb.password}

environments:
    development:
        dataSource:
            dbCreate: update
            url: jdbc:postgresql:omardb-dev
    test:
        dataSource:
            dbCreate: update
            url: jdbc:postgresql:omardb-test
    production:
        dataSource:
            dbCreate: update
            url: ${omarDb.url}
            properties:
                jmxEnabled: true
                initialSize: 5
                maxActive: 50
                minIdle: 5
                maxIdle: 25
                maxWait: 10000
                maxAge: 600000
                timeBetweenEvictionRunsMillis: 5000
                minEvictableIdleTimeMillis: 60000
                validationQuery: SELECT 1
                validationQueryTimeout: 3
                validationInterval: 15000
                testOnBorrow: true
                testWhileIdle: true
                testOnReturn: false
                jdbcInterceptors: ConnectionState
                defaultTransactionIsolation: 2 # TRANSACTION_READ_COMMITTED
---
server:
    servlet:
        context-path: /omar-ui
    contextPath: ${server.servlet.context-path}

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    env:
      enabled: true
      sensitive: false
    health:
      enabled: true

grails:
    cors:
        enabled: true
    resources:
        pattern: '/**'
    servlet:
        version: 3.0
---
spring:
  application:
    name: omar-ui
  cloud:
    discovery:
      enabled: ${SPRING_CLOUD_DISCOVERY_ENABLED:false}
    service-registry:
      auto-registration:
        enabled: ${spring.cloud.discovery.enabled}

eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_URI:http://omar-eureka-server:8761/omar-eureka-server/eureka}
  instance:
    preferIpAddress: true
---
securityClassification:
    backgroundColor: green
    classification: Unclassified
    color: white

---
defaultPreferences:
    defaultUsername: Anonymous

requestHeaderUsername: username

---
# About dropdown settings
about:
  # Email support
  contactEmail: Contact Email
  # O2 release name
  releaseName: Release Name
  # O2 release version number
  releaseNumber: Release Number

# If there a page banner is needed, set it here
banner:
  backgroundColor: darkgray
  description: This application is subject to change without notice.
  enabled: true
  text: BETA
  textColor: white

baseUrl: https://omar-dev.ossim.io

logging:
  config: classpath:logback.groovy

omar:
  app:
    # If true, the reachback tab and panel will be displayed and accessible.
    reachbackEnabled: true
    reachbackUrl: https://omar-dev.ossim.io/omar-reachback/index/search?
    footprints:
      imageFootprints:
        format: image/gif
        layers: omar:raster_entry
        name: Image Footprints
        # Styling for the footprint layer.
        # Choices are "byFileType", "bySensorType", "byMissionType"
        styles: byFileType
        version: 1.1.1
      videoFootprints:
        format: image/gif
        layers: omar:video_data_set
        name: Video Footprints
        # Styling for the footprint layer.
        # Choices are "byFileType", "bySensorType", "byMissionType"
        styles: byFileType
        version: 1.1.1
    jpipApp:
      # Used to show/hide the JPIP buttons in the UI (True or False)
      enabled: true
    kmlApp:
      enabled: true
    # Base settings for the O2 UI general configuration
    misc:
      # This will enable thumbnails to be provided by oms or wms. The types are "wms" or "oms".
      # "oms" requires that omar-oms is deployed "wms" requires 
      # either omar-wms or omar-wms-lite to be deployed
      thumbnailType: "WMS"
      # Enable BE number lookups in the search field.
      beLookupEnabled: false
      icons:
        greenMarker: assets/search_marker_green.png
      # Allows logging for javascript
      javascriptDebug: false
      # Configurable message that opens when accessing the map
      mapInfoMessage:
        # Used to enable/disable the map info message from displaying (default = false)
        enabled: true
        # The timeout after you hover the mapInfoMessage
        extendedTimeOut: 10000
        # Map information header text
        header: <h4>Check out what's new!</h4>
        # Map information body text.  You can embed HTML in the message for formatting.
        message: "<h5>You can now search by Product Type</h5><ol><li>Click on the Keyword filter</li><li>Select a product type from the available choices (Example: 2CMV)</li></ol>"
        # A progress bar to see the mapInfo message timeout in real time
        progressBar: true
        # The timeout before the mapInfo message disappears
        timeOut: 10000
      # Message of The Display Banner settings
      motd:
        # Used to show/hide the message of the day banner
        enabled: true
        # Text for the message of the day
        message: "Be sure to check out the new federation capability by selecting an O2 server from the new dropdown box located above the result cards list!"
      # The placemarks uses the WFS query engine to query placemark locations based on BE numbers.
      placemarks:
        # The table column with the BE list
        columnName: be_number
        # The table column with the display name
        displayNameColumnName: name
        # The spatial column in the BE table
        geomName: geom
        # The maximum number of BE items to return in a query
        maxResults: 100
        # Namespace and table name where the BE's are stored and is a WFS tableId entry.
        tableName: omar:facility
      # Configurable splash menu that opens upon application start up
      splashModal:
        delay: 1000
        # Used to enable/disable the splash modal from displaying
        enabled: true
        # Splash modal header text
        header: O2 Notice
        # Splash modal message body text
        message: Welcome to the O2 image discovery and analysis application.
      # Metrics dropdown menu settings
      metrics:
        # Used to show/hide the Metrics dropdown menu in the UI
        enabled: true
        # Settings for the Admin section of the metrics dropdown
        admin:
          # hide/show the Metrics Admin section
          enabled: true
          # Kibana dashboard settings
          kibana:
            # URL of the Kibana dashboard
            baseUrl: http://kibana.ossim.io
            # Used to show/hide the Dashboard button
            enabled: true
          # Spring Boot Admin settings
          springBootAdmin:
            # URL of the Spring Boot Admin
            baseUrl: ${baseUrl}/omar-admin-server/#/
            # Used to show/hide the SBA button
            enabled: true
        # Settings for the User section of the metrics dropdown
        user:
          # Used to show/hide the User section of the metrics dropdown
          enabled: true
          eureka:
            # URL of the Eureka server used to show system status
            baseUrl: ${baseUrl}/omar-eureka-server
            # Used to show/hide the Service Health & Status button
            enabled: true
          servicesMonitor:
            # URL of the O2 Services Monitor dashboard
            baseUrl: ${baseUrl}/omar-services-monitor/
            # Used to show/hide the Services Monitor
            enabled: true
    sites:
      o2:
        info:
          # Short name for the omar site
          name: OMAR - Default
          # Long name/description of the site.  This is displayed in the dropdown in the UI
          description: OMAR Default Server
        url:
          # Base URL for the federated site
          base: ${baseUrl}
          # Optional context paths for the apps, e.g.
          # uiContextPath: /omar-ui
    twofishes:
      # URL of Twofishes search service.
      # Used for geocoding place names
      baseUrl: ${baseUrl}/omar-twofishes
    uploadApp:
      enabled: true
    userGuide:
      # URL of the userGuide
      baseUrl: ${baseUrl}/omar-docs/
      # Used to show/hide the user guide links
      enabled: true
  openlayers:
    # Allows one to control the layers added to the base maps section of openlayers on the ortho view and map view pages in the omar-app.
    # If you do not have this field specified in the application YAML it will use the default layer.
    # The default layer is the **OSM Basic** layer from https://omar-dev.ossim.io.
    baseMaps:
      o2-basemap-basic:
        layerType: tilewms
        options:
          visible: true
        params:
          layers: o2-basemap-basic
          format: image/jpeg
        title: OSM Basic
        url: ${baseUrl}/omar-mapproxy/service
    # Uncomment the example(s) below, and *modify* accordingly to
    # add a custom overlay layer.
    # overlayLayers:
    #   ne:
    #     layerType: "tilewms"
    #     title: "Tile WMS Example"
    #     url: "https://ahocevar.com/geoserver/wms"
    #     params:
    #       layers: 'ne:NE1_HR_LC_SR_W_DR'
    #       tiled: true
    #     options:
    #       visible: false
    #   topp:
    #     layerType: "imagewms"
    #     title: "Image WMS Example"
    #     url: "https://ahocevar.com/geoserver/wms"
    #     params:
    #       layers: 'topp:states'
    #     options:
    #       visible: false
    # if you would like to differentiate things on a specific zoom level, set it here
    zoomFilterChangeLevel: 10

securityClassification:
  # Can be named values such as "red", "green", "yellow" , ... etc. or you can specify an exact color using the CSS styling format.
  # For example, if you wanted white banners you can set the value to "#FFFFFF" and if you wanted red you can also use the value "#FF0000".
  backgroundColor: green
  # This is the string displayed in the banners.
  # So setting to "My Secret Stuff" would print that string at the top and bottom of every page with a background color identified by the "backgroundColor" field
  classification: Unclassified
  # The actual HTML style color for the classification text
  color: white

# Set the context path for the application.
server:
  contextPath: /omar-ui

swagger:
    schemes:
        - HTTPS
        - HTTP

userInfo:
  # Configurable request header name parameter
  requestHeaderUserName: username
  # Configurable default name for the request header user (Default: Anonymous).
  # Used if no name is found in PKI cert.
  requestHeaderUserNameDefault: Anonymous
